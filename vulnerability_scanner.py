import subprocess

# Function to scan Android device for vulnerabilities using Nmap
def scan_android_device():
    try:
        # Run Nmap scan to detect open ports and services
        nmap_output = subprocess.check_output(['nmap', '-p-', '--script', 'vulners', '-oG', '-', '192.168.1.5'])
        # Parse Nmap output to extract vulnerability information and exploitability
        vulnerabilities = parse_nmap_output(nmap_output)
        return vulnerabilities
    except subprocess.CalledProcessError as e:
        print("Error running Nmap:", e)
        return []

# Function to parse Nmap output and extract vulnerability information and exploitability
def parse_nmap_output(nmap_output):
    vulnerabilities = []
    lines = nmap_output.decode('utf-8').split('\n')
    for line in lines:
        if 'open' in line and 'VULNERABLE' in line:
            parts = line.split(' ')
            cve_id = parts[-1]
            description = ' '.join(parts[:-1])
            exploitability = 'Exploitable' if 'Exploit!' in line else 'Nope'
            vulnerabilities.append({'CVE ID': cve_id, 'Description': description, 'Exploitability': exploitability})
    return vulnerabilities

# Main function
def main():
    print("Scanning Android device for vulnerabilities...")
    device_vulnerabilities = scan_android_device()

    if device_vulnerabilities:
        print("Vulnerabilities found on the Android device:")
        for vulnerability in device_vulnerabilities:
            print(f"CVE ID: {vulnerability['CVE ID']}, Description: {vulnerability['Description']}, Exploitable: {vulnerability['Exploitability']}")
    else:
        print("No vulnerabilities found on the Android device.")

if __name__ == "__main__":
    main()
